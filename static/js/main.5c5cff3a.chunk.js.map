{"version":3,"sources":["Navigation.js","base.js","Home.js","Upload.js","App.js","index.js"],"names":["Navigation","Navbar","className","bg","variant","Brand","href","Nav","to","Component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","storage","Home","props","deleteImage","bind","editImage","saveEdits","cancelEdits","nameEdit","descriptionEdit","state","imageData","selectedImagesToDelete","imageEdit","imageEditId","ref","on","snapshot","setState","val","id","remove","this","newImageData","edit","console","log","e","editedImage","JSON","parse","stringify","name","target","value","description","set","Object","entries","map","data","alt","src","url","type","placeholder","onChange","Button","onClick","Upload","uploadImage","selectImagesToUpload","selectedImagesToUpload","doneUploading","imagesToUpload","imageObj","i","uploadTask","fileName","put","file","progress","bytesTransferred","totalBytes","error","alert","length","getDownloadURL","then","downloadURL","newImage","push","files","reader","FileReader","onloadend","newImageFile","result","split","selectedImages","concat","readAsDataURL","title","multiple","fileObj","addImageName","addImageDescription","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c5cff3a.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <Navbar className=\"Nav\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n                <Nav className=\"mr-auto\">                    \n                    <Link className=\"links\" to=\"/\">Home</Link>\n                    <Link className=\"links\" to=\"/upload\">Upload</Link>\n                </Nav>\n            </Navbar>\n        )\n    }\n}\n\nexport default Navigation;\n","import firebase from 'firebase';\nimport \"firebase/storage\";\n\nvar config = {\n    apiKey: \"AIzaSyB5DOgKEJRorRjJJW6dXmp7a3j-YZP1uU0\",\n    authDomain: \"shopify-image-repo-606fb.firebaseapp.com\",\n    databaseURL: \"https://shopify-image-repo-606fb-default-rtdb.firebaseio.com\",\n    projectId: \"shopify-image-repo-606fb\",\n    storageBucket: \"shopify-image-repo-606fb.appspot.com\",\n    messagingSenderId: \"6708771276\",\n    appId: \"1:6708771276:web:7abab8943f1724fc400569\",\n    measurementId: \"G-9FDP75EF88\"\n};\n\nconst app = firebase.initializeApp(config);\nconst db = firebase.database();\nconst storage = firebase.storage();\n \nexport { db, storage, app }","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"firebase/database\";\nimport { db } from './base';\nimport Button from 'react-bootstrap/Button';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.editImage = this.editImage.bind(this);\n    this.saveEdits = this.saveEdits.bind(this);\n    this.cancelEdits = this.cancelEdits.bind(this);\n    this.nameEdit = this.nameEdit.bind(this);\n    this.descriptionEdit = this.descriptionEdit.bind(this);\n    this.state = {\n      imageData: null,\n      selectedImagesToDelete: [],\n      imageEdit: null,\n      imageEditId: null\n    }\n  }\n\n  componentDidMount() {\n    db.ref('images').on('value', (snapshot) => {\n      this.setState({imageData: snapshot.val()})\n    });\n  }\n\n  deleteImage(id){\n    db.ref('images/' + id).remove();\n    this.setState({imageEditId: null});\n  }\n\n  editImage(id){\n    let newImageData = this.state.imageData;\n    newImageData[id].edit = true;\n    if(this.state.imageEditId != null){\n        //used to turnoff any other images in edit mode\n        console.log(this.state.imageEditId);\n        newImageData[this.state.imageEditId].edit = false;\n    }\n    this.setState({\n        imageData: newImageData,\n        imageEditId: id\n    });\n  }\n\n  nameEdit(e){\n    let editedImage = JSON.parse(JSON.stringify(this.state.imageData[this.state.imageEditId]));\n    editedImage.name = e.target.value;\n    this.setState({imageEdit: editedImage})\n  }\n\n  descriptionEdit(e){\n    let editedImage = JSON.parse(JSON.stringify(this.state.imageData[this.state.imageEditId]));\n    editedImage.description = e.target.value;\n    this.setState({imageEdit: editedImage})\n  }\n\n  saveEdits(){\n    let imageEdit = this.state.imageEdit;\n    delete imageEdit.edit;\n    db.ref(\"images/\" + this.state.imageEditId).set(this.state.imageEdit);\n    this.cancelEdits(this.state.imageEditId);\n  }\n\n  cancelEdits(){\n    let newImageData = this.state.imageData;\n    newImageData[this.state.imageEditId].edit = false;\n    this.setState({\n        imageData: newImageData,\n        imageEdit: null,\n        imageEditId: null\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"ImageContainer\">\n          {this.state.imageData &&\n            Object.entries(this.state.imageData).map((data) => {\n              let id = data[0];\n              let imageData = data[1];\n              return (\n                  <div className=\"ImageObject\" key={id}>\n                      <img alt={imageData.name} src={imageData.url} />\n                      {imageData.edit ?\n                          <div className=\"imageText\">\n                            <div className=\"title\">\n                                <input type=\"text\" placeholder={imageData.name} onChange={(e) => {this.nameEdit(e)}}/>\n                            </div>\n                            <div className=\"description\">\n                                <input type=\"text\" placeholder={imageData.description} onChange={(e) => this.descriptionEdit(e)}/>\n                            </div>\n                          </div>\n                          :\n                          <div className=\"imageText\">\n                            <div className=\"title\">\n                              <h3>{imageData.name}</h3>\n                            </div>\n                            <div className=\"description\">\n                                {imageData.description}\n                            </div>\n                          </div>\n                      }\n                      {imageData.edit ?\n                        <div className=\"buttonsEdit\">\n                            <Button onClick={this.saveEdits} variant=\"success\">Save</Button>\n                            <Button onClick={this.cancelEdits} variant=\"secondary\">Cancel</Button>\n                            <Button onClick={() => {this.deleteImage(id)}} variant=\"danger\">Delete</Button>\n                        </div>\n                        :\n                        <div className=\"buttonsNormal\">\n                            <Button className=\"edit\" onClick={() => {this.editImage(id)}} variant=\"primary\">Edit</Button>\n                            <Button onClick={() => {this.deleteImage(id)}} variant=\"danger\">Delete</Button>\n                        </div>\n                      }\n                  </div>\n              )\n            })\n          }\n        </div>\n        {/* <button onClick={this.deleteImages}>Delete</button>\n        <input id=\"checkAll\" type=\"checkbox\" onClick={(e) => {this.checkAll(e)}}></input>\n        <label for=\"checkAll\">Select All</label> */}\n      </div>\n    )\n  };\n}\n\nexport default Home;\n","import { Component } from 'react';\nimport \"firebase/database\";\nimport { db, storage } from './base';\nimport Button from 'react-bootstrap/Button';\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.uploadImage = this.uploadImage.bind(this);\n        this.selectImagesToUpload = this.selectImagesToUpload.bind(this);\n        this.state = {\n            selectedImagesToUpload: [],\n            imageData: null,\n            doneUploading: false\n        }\n    }\n\n    uploadImage(){\n        let imagesToUpload = this.state.selectedImagesToUpload;\n        imagesToUpload.map((imageObj, i) => {\n          let uploadTask = storage.ref('images/' + imageObj.fileName).put(imageObj.file);\n          uploadTask.on('state_changed', function(snapshot){\n          let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n            }, function(error) {\n                alert(\"error uploading\");\n            }, function() {\n                if(imagesToUpload.length-1 === i){\n                    alert(\"Upload Complete, See Home Page\")\n                }\n                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n                    console.log('File available at', downloadURL);\n                    let newImage = db.ref('images').push();\n                    imageObj.url = downloadURL\n                    newImage.set(imageObj);\n                })\n            })\n            return null;\n        })\n    }\n\n    selectImagesToUpload(e){\n        this.setState({selectedImagesToUpload: []})\n        Object.entries(e.target.files).map(file => {\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                let newImageFile = {\n                    file: file[1],\n                    url: reader.result,\n                    fileName: file[1].name,\n                    name: file[1].name.split('.')[0],\n                    description: \"\"\n                }\n                let selectedImages = this.state.selectedImagesToUpload.concat(newImageFile);\n                this.setState({selectedImagesToUpload: selectedImages});\n            }\n            reader.readAsDataURL(file[1]);\n            return null;\n        })\n    }\n\n    addImage(title) {\n        let imagesRef = db.ref('images');\n        let newImage = imagesRef.push();\n        newImage.set({\n          title: title\n        });\n    }\n\n    addImageDescription(e, i){\n        let selectedImages = this.state.selectedImagesToUpload;\n        selectedImages[i].description = e.target.value;\n        this.setState({selectedImagesToUpload: selectedImages})\n    }\n\n    addImageName(e, i){\n        let selectedImages = this.state.selectedImagesToUpload;\n        selectedImages[i].name = e.target.value;\n        this.setState({selectedImagesToUpload: selectedImages})\n    }\n\n    render() {\n        return (\n            <div className=\"Upload\">\n                <div className=\"UploadArea\">\n                    <div className=\"UploadButtons\">\n                        <input multiple type=\"file\" name=\"file\" onChange={this.selectImagesToUpload}/>\n                        <Button onClick={() => {this.uploadImage()}}>Upload Image</Button>\n                    </div>\n                </div>\n                {this.state.selectedImagesToUpload.length > 0 && \n                    <div className=\"UploadContainer\">\n                        {this.state.selectedImagesToUpload.map((fileObj, i) => {\n                            return (\n                                <div className=\"UploadObject\">\n                                    <img alt={fileObj.name} src={fileObj.url} />\n                                    <div className=\"uploadText\">\n                                        <div className=\"title\">\n                                            <input type=\"text\" placeholder={fileObj.name} onChange={(e) => {this.addImageName(e, i)}}/>\n                                        </div>\n                                        <div className=\"description\">\n                                            <input type=\"text\" onChange={(e) => {this.addImageDescription(e, i)}}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Upload;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Home from './Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Upload from './Upload';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
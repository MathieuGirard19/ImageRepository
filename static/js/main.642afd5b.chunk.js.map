{"version":3,"sources":["Navigation.js","base.js","Home.js","Upload.js","App.js","index.js"],"names":["Navigation","Navbar","className","bg","variant","Brand","href","Nav","to","Component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","storage","Home","props","deleteImage","bind","editImage","saveEdits","cancelEdits","nameEdit","descriptionEdit","state","imageData","selectedImagesToDelete","imageEdits","imageEditId","ref","on","snapshot","console","log","val","setState","id","remove","this","imageToEdit","JSON","parse","stringify","e","editedImage","name","target","value","description","imageEdit","edit","set","Object","entries","map","data","alt","src","url","type","placeholder","onChange","Button","onClick","Upload","uploadImage","selectImagesToUpload","selectedImagesToUpload","doneUploading","imagesToUpload","imageObj","i","uploadTask","fileName","put","file","progress","bytesTransferred","totalBytes","error","alert","length","getDownloadURL","then","downloadURL","newImage","push","files","reader","FileReader","onloadend","newImageFile","result","split","selectedImages","concat","readAsDataURL","title","multiple","fileObj","addImageName","addImageDescription","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.642afd5b.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <Navbar className=\"Nav\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n                <Nav className=\"mr-auto\">                    \n                    <Link className=\"links\" to=\"/\">Home</Link>\n                    <Link className=\"links\" to=\"/upload\">Upload</Link>\n                </Nav>\n            </Navbar>\n        )\n    }\n}\n\nexport default Navigation;\n","import firebase from 'firebase';\nimport \"firebase/storage\";\n\nvar config = {\n    apiKey: \"AIzaSyB5DOgKEJRorRjJJW6dXmp7a3j-YZP1uU0\",\n    authDomain: \"shopify-image-repo-606fb.firebaseapp.com\",\n    databaseURL: \"https://shopify-image-repo-606fb-default-rtdb.firebaseio.com\",\n    projectId: \"shopify-image-repo-606fb\",\n    storageBucket: \"shopify-image-repo-606fb.appspot.com\",\n    messagingSenderId: \"6708771276\",\n    appId: \"1:6708771276:web:7abab8943f1724fc400569\",\n    measurementId: \"G-9FDP75EF88\"\n};\n\nconst app = firebase.initializeApp(config);\nconst db = firebase.database();\nconst storage = firebase.storage();\n \nexport { db, storage, app }","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"firebase/database\";\nimport { db } from './base';\nimport Button from 'react-bootstrap/Button';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.editImage = this.editImage.bind(this);\n    this.saveEdits = this.saveEdits.bind(this);\n    this.cancelEdits = this.cancelEdits.bind(this);\n    this.nameEdit = this.nameEdit.bind(this);\n    this.descriptionEdit = this.descriptionEdit.bind(this);\n    this.state = {\n      imageData: null,\n      selectedImagesToDelete: [],\n      imageEdits: null,\n      imageEditId: null\n    }\n  }\n\n  componentDidMount() {\n    db.ref('images').on('value', (snapshot) => {\n      console.log(snapshot.val());\n      this.setState({imageData: snapshot.val()})\n    });\n  }\n\n  deleteImage(id){\n    db.ref('images/' + id).remove();\n    this.setState({imageEditId: null});\n  }\n\n  editImage(id){\n    let imageToEdit = JSON.parse(JSON.stringify(this.state.imageData[id]))\n    this.setState({\n      imageEditId: id,\n      imageEdits: imageToEdit\n    });\n  }\n\n  nameEdit(e){\n    let editedImage = this.state.imageEdits;\n    editedImage.name = e.target.value;\n    this.setState({imageEdits: editedImage})\n  }\n\n  descriptionEdit(e){\n    let editedImage = this.state.imageEdits;\n    editedImage.description = e.target.value;\n    this.setState({imageEdit: editedImage})\n  }\n\n  saveEdits(){\n    let imageEdit = this.state.imageEdits;\n    delete imageEdit.edit;\n    db.ref(\"images/\" + this.state.imageEditId).set(imageEdit);\n    this.cancelEdits()\n  }\n\n  cancelEdits(){\n    this.setState({\n        imageEdits: null,\n        imageEditId: null\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"ImageContainer\">\n          {this.state.imageData &&\n            Object.entries(this.state.imageData).map((data) => {\n              let id = data[0];\n              let imageData = data[1];\n              return (\n                  <div className=\"ImageObject\" key={id}>\n                      <img alt={imageData.name} src={imageData.url} />\n                      {id == this.state.imageEditId ?\n                          <div className=\"imageText\">\n                            <div className=\"title\">\n                                <input type=\"text\" placeholder={imageData.name} onChange={(e) => {this.nameEdit(e)}}/>\n                            </div>\n                            <div className=\"description\">\n                                <input type=\"text\" placeholder={imageData.description} onChange={(e) => this.descriptionEdit(e)}/>\n                            </div>\n                          </div>\n                          :\n                          <div className=\"imageText\">\n                            <div className=\"title\">\n                              <h3>{imageData.name}</h3>\n                            </div>\n                            <div className=\"description\">\n                                {imageData.description}\n                            </div>\n                          </div>\n                      }\n                      {id == this.state.imageEditId ?\n                        <div className=\"buttonsEdit\">\n                            <Button onClick={this.saveEdits} variant=\"success\">Save</Button>\n                            <Button onClick={this.cancelEdits} variant=\"secondary\">Cancel</Button>\n                            <Button onClick={() => {this.deleteImage(id)}} variant=\"danger\">Delete</Button>\n                        </div>\n                        :\n                        <div className=\"buttonsNormal\">\n                            <Button className=\"edit\" onClick={() => {this.editImage(id)}} variant=\"primary\">Edit</Button>\n                            <Button onClick={() => {this.deleteImage(id)}} variant=\"danger\">Delete</Button>\n                        </div>\n                      }\n                  </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default Home;\n","import { Component } from 'react';\nimport \"firebase/database\";\nimport { db, storage } from './base';\nimport Button from 'react-bootstrap/Button';\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props)\n        this.uploadImage = this.uploadImage.bind(this);\n        this.selectImagesToUpload = this.selectImagesToUpload.bind(this);\n        this.state = {\n            selectedImagesToUpload: [],\n            imageData: null,\n            doneUploading: false\n        }\n    }\n\n    uploadImage(){\n        let imagesToUpload = this.state.selectedImagesToUpload;\n        imagesToUpload.map((imageObj, i) => {\n          let uploadTask = storage.ref('images/' + imageObj.fileName).put(imageObj.file);\n          uploadTask.on('state_changed', function(snapshot){\n          let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n            }, function(error) {\n                alert(\"error uploading\");\n            }, function() {\n                if(imagesToUpload.length-1 === i){\n                    alert(\"Upload Complete, See Home Page\")\n                }\n                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n                    console.log('File available at', downloadURL);\n                    let newImage = db.ref('images').push();\n                    imageObj.url = downloadURL\n                    newImage.set(imageObj);\n                })\n            })\n            return null;\n        })\n    }\n\n    selectImagesToUpload(e){\n        this.setState({selectedImagesToUpload: []})\n        Object.entries(e.target.files).map(file => {\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                let newImageFile = {\n                    file: file[1],\n                    url: reader.result,\n                    fileName: file[1].name,\n                    name: file[1].name.split('.')[0],\n                    description: \"\"\n                }\n                let selectedImages = this.state.selectedImagesToUpload.concat(newImageFile);\n                this.setState({selectedImagesToUpload: selectedImages});\n            }\n            reader.readAsDataURL(file[1]);\n            return null;\n        })\n    }\n\n    addImage(title) {\n        let imagesRef = db.ref('images');\n        let newImage = imagesRef.push();\n        newImage.set({\n          title: title\n        });\n    }\n\n    addImageDescription(e, i){\n        let selectedImages = this.state.selectedImagesToUpload;\n        selectedImages[i].description = e.target.value;\n        this.setState({selectedImagesToUpload: selectedImages})\n    }\n\n    addImageName(e, i){\n        let selectedImages = this.state.selectedImagesToUpload;\n        selectedImages[i].name = e.target.value;\n        this.setState({selectedImagesToUpload: selectedImages})\n    }\n\n    render() {\n        return (\n            <div className=\"Upload\">\n                <div className=\"UploadArea\">\n                    <div className=\"UploadButtons\">\n                        <input multiple type=\"file\" name=\"file\" onChange={this.selectImagesToUpload}/>\n                        <Button onClick={() => {this.uploadImage()}}>Upload Image</Button>\n                    </div>\n                </div>\n                {this.state.selectedImagesToUpload.length > 0 && \n                    <div className=\"UploadContainer\">\n                        {this.state.selectedImagesToUpload.map((fileObj, i) => {\n                            return (\n                                <div className=\"UploadObject\">\n                                    <img alt={fileObj.name} src={fileObj.url} />\n                                    <div className=\"uploadText\">\n                                        <div className=\"title\">\n                                            <input type=\"text\" placeholder={fileObj.name} onChange={(e) => {this.addImageName(e, i)}}/>\n                                        </div>\n                                        <div className=\"description\">\n                                            <input type=\"text\" onChange={(e) => {this.addImageDescription(e, i)}}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Upload;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Home from './Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Upload from './Upload';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/upload\">\n            <Upload />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}